[{"C:\\Users\\JMJ\\boiler-plate\\client\\src\\App.js":"1","C:\\Users\\JMJ\\boiler-plate\\client\\src\\components\\views\\RegisterPage\\RegisterComponent.js":"2","C:\\Users\\JMJ\\boiler-plate\\client\\src\\pages\\RegisterPage.js":"3","C:\\Users\\JMJ\\boiler-plate\\client\\src\\components\\views\\LoginPage\\LoginComponent.js":"4","C:\\Users\\JMJ\\boiler-plate\\client\\src\\components\\views\\Header\\Header.js":"5","C:\\Users\\JMJ\\boiler-plate\\client\\src\\pages\\LoginPage.js":"6","C:\\Users\\JMJ\\boiler-plate\\client\\src\\components\\views\\HomePage\\HomeComponent.js":"7","C:\\Users\\JMJ\\boiler-plate\\client\\src\\index.js":"8","C:\\Users\\JMJ\\youtube\\client\\src\\reportWebVitals.js":"9","C:\\Users\\JMJ\\youtube\\client\\src\\pages\\LoginPage.js":"10","C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\HomePage\\HomeComponent.js":"11","C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\Header\\Header.js":"12","C:\\Users\\JMJ\\youtube\\client\\src\\index.js":"13","C:\\Users\\JMJ\\youtube\\client\\src\\pages\\HomePage.js":"14","C:\\Users\\JMJ\\youtube\\client\\src\\reducers\\user_reducer.js":"15","C:\\Users\\JMJ\\youtube\\client\\src\\actions\\user_action.js":"16","C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\RegisterPage\\RegisterComponent.js":"17","C:\\Users\\JMJ\\youtube\\client\\src\\pages\\VideoUploadPage.js":"18","C:\\Users\\JMJ\\youtube\\client\\src\\App.js":"19","C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoUpload\\VideoUploadComponent.js":"20","C:\\Users\\JMJ\\youtube\\client\\src\\actions\\types.js":"21","C:\\Users\\JMJ\\youtube\\client\\src\\reducers\\rootReducer.js":"22","C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\LoginPage\\LoginComponent.js":"23","C:\\Users\\JMJ\\youtube\\client\\src\\pages\\RegisterPage.js":"24","C:\\Users\\JMJ\\youtube\\client\\src\\hoc\\auth.js":"25","C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoDetail\\VideoDetailComponent.js":"26","C:\\Users\\JMJ\\youtube\\client\\src\\pages\\VideoDetailPage.js":"27","C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoDetail\\Section\\SideVideo.js":"28","C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoDetail\\Section\\Subscribe.js":"29","C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\Subscription\\SubscriptionComponent.js":"30","C:\\Users\\JMJ\\youtube\\client\\src\\pages\\SubscriptionPage.js":"31","C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoDetail\\Section\\Comment.js":"32","C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoDetail\\Section\\SingleComment.js":"33","C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoDetail\\Section\\ReplyComment.js":"34","C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoDetail\\Section\\LikeDislikes.js":"35"},{"size":644,"mtime":1611688734611,"results":"36","hashOfConfig":"37"},{"size":2834,"mtime":1611688066535,"results":"38","hashOfConfig":"37"},{"size":373,"mtime":1611688598292,"results":"39","hashOfConfig":"37"},{"size":2048,"mtime":1611688130497,"results":"40","hashOfConfig":"37"},{"size":1538,"mtime":1611688622176,"results":"41","hashOfConfig":"37"},{"size":345,"mtime":1611688592686,"results":"42","hashOfConfig":"37"},{"size":1076,"mtime":1611688838139,"results":"43","hashOfConfig":"37"},{"size":961,"mtime":1611688694860,"results":"44","hashOfConfig":"37"},{"size":375,"mtime":1611689538109,"results":"45","hashOfConfig":"46"},{"size":345,"mtime":1611689538107,"results":"47","hashOfConfig":"46"},{"size":2675,"mtime":1612459545620,"results":"48","hashOfConfig":"46"},{"size":2815,"mtime":1612939606839,"results":"49","hashOfConfig":"46"},{"size":990,"mtime":1612291398695,"results":"50","hashOfConfig":"46"},{"size":345,"mtime":1611689538106,"results":"51","hashOfConfig":"46"},{"size":525,"mtime":1611689538109,"results":"52","hashOfConfig":"46"},{"size":870,"mtime":1611689538098,"results":"53","hashOfConfig":"46"},{"size":2834,"mtime":1611689538104,"results":"54","hashOfConfig":"46"},{"size":390,"mtime":1611759192869,"results":"55","hashOfConfig":"46"},{"size":1109,"mtime":1612466075620,"results":"56","hashOfConfig":"46"},{"size":7119,"mtime":1612463892841,"results":"57","hashOfConfig":"46"},{"size":142,"mtime":1611689538097,"results":"58","hashOfConfig":"46"},{"size":163,"mtime":1611689538108,"results":"59","hashOfConfig":"46"},{"size":2048,"mtime":1611689538102,"results":"60","hashOfConfig":"46"},{"size":373,"mtime":1611689538107,"results":"61","hashOfConfig":"46"},{"size":1550,"mtime":1611689538105,"results":"62","hashOfConfig":"46"},{"size":3606,"mtime":1612891488527,"results":"63","hashOfConfig":"46"},{"size":384,"mtime":1612292503871,"results":"64","hashOfConfig":"46"},{"size":1953,"mtime":1612464759737,"results":"65","hashOfConfig":"46"},{"size":2989,"mtime":1612458924633,"results":"66","hashOfConfig":"46"},{"size":2739,"mtime":1612464615232,"results":"67","hashOfConfig":"46"},{"size":391,"mtime":1612459233418,"results":"68","hashOfConfig":"46"},{"size":3261,"mtime":1612896949985,"results":"69","hashOfConfig":"46"},{"size":3015,"mtime":1612935991408,"results":"70","hashOfConfig":"46"},{"size":2065,"mtime":1612816424742,"results":"71","hashOfConfig":"46"},{"size":6581,"mtime":1613037709233,"results":"72","hashOfConfig":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qm1dvc",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"pjglx0",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"121","usedDeprecatedRules":"91"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"105"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"133"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"105"},"C:\\Users\\JMJ\\boiler-plate\\client\\src\\App.js",[],"C:\\Users\\JMJ\\boiler-plate\\client\\src\\components\\views\\RegisterPage\\RegisterComponent.js",[],"C:\\Users\\JMJ\\boiler-plate\\client\\src\\pages\\RegisterPage.js",[],"C:\\Users\\JMJ\\boiler-plate\\client\\src\\components\\views\\LoginPage\\LoginComponent.js",[],"C:\\Users\\JMJ\\boiler-plate\\client\\src\\components\\views\\Header\\Header.js",[],"C:\\Users\\JMJ\\boiler-plate\\client\\src\\pages\\LoginPage.js",[],"C:\\Users\\JMJ\\boiler-plate\\client\\src\\components\\views\\HomePage\\HomeComponent.js",[],"C:\\Users\\JMJ\\boiler-plate\\client\\src\\index.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\reportWebVitals.js",[],["158","159"],"C:\\Users\\JMJ\\youtube\\client\\src\\pages\\LoginPage.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\HomePage\\HomeComponent.js",[],["160","161"],"C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\Header\\Header.js",["162"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport '../../../scss/Header.scss';\r\nimport { auth } from '../../../actions/user_action';\r\n\r\n\r\n    \r\nconst Header = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [login, setLogin] = useState(false);\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(auth())\r\n            .then(response => {\r\n                //로그인 하지 않은 상태\r\n                if (!response.payload.isAuth) {\r\n                    if (localStorage.getItem('userID')) {\r\n                        localStorage.removeItem('userID');\r\n                        setLogin(false);\r\n                    }\r\n                } else {\r\n                    //로그인 한 상태\r\n                    if (!localStorage.getItem('userID')) {\r\n                        axios.get('/api/users/logout')\r\n                        .then(response => {\r\n                            if (response.data.sccess) {\r\n                                setLogin(false);\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n\r\n        if (localStorage.getItem('userID')) {\r\n            setLogin(!login);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const onClickLogoutHandler = () => {\r\n        localStorage.removeItem('userID');\r\n        \r\n        axios.get('/api/users/logout')\r\n        .then(response => {\r\n            console.log(response);\r\n\r\n            if (response.data.success) {\r\n                setLogin(!login);\r\n                props.history.push('/');\r\n            } else {\r\n                alert(\"로그아웃하는데 실패하였습니다.\");\r\n            }\r\n        })\r\n    }\r\n\r\n        return (\r\n            <header>\r\n                {login ? (\r\n                    <>\r\n                        <h1 className=\"header-title\"><Link to=\"/\">MINTUBE</Link></h1>\r\n                        <ul className=\"header-menu\">\r\n                            <li><Link to=\"/video/upload\">VideoUpload</Link></li> \r\n                            <li><Link to=\"/subscription\">Subscription</Link></li> \r\n                            <li><Link to=\"/\" onClick={onClickLogoutHandler}>Logout</Link></li>\r\n                        </ul>\r\n                    </>\r\n                    ) :\r\n                    <>\r\n                        <h1 className=\"header-title\"><Link to=\"/\">MINTUBE</Link></h1>\r\n                        <ul className=\"header-menu\">\r\n                            <li><Link to=\"/login\">Login</Link></li>\r\n                            <li><Link to=\"/register\">Signup</Link></li>\r\n                        </ul>\r\n                    </>\r\n                }\r\n            </header>\r\n        )\r\n};\r\n\r\nexport default withRouter(Header);",["163","164"],"C:\\Users\\JMJ\\youtube\\client\\src\\index.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\pages\\HomePage.js",[],["165","166"],"C:\\Users\\JMJ\\youtube\\client\\src\\reducers\\user_reducer.js",["167"],"import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER\r\n} from '../actions/types';\r\n\r\n//리듀서 함수 정의\r\nexport default function(state = {}, action) {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return {...state, loginSuccess: action.payload}\r\n        \r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload}\r\n        \r\n        case AUTH_USER:\r\n            return {...state, userData: action.payload}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n} ",["168","169"],"C:\\Users\\JMJ\\youtube\\client\\src\\actions\\user_action.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\RegisterPage\\RegisterComponent.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\pages\\VideoUploadPage.js",[],["170","171"],"C:\\Users\\JMJ\\youtube\\client\\src\\App.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoUpload\\VideoUploadComponent.js",["172"],"import React, { useState } from 'react';\r\nimport {Typography, Button, Form, Input, message } from 'antd'; \r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst { TextArea } = Input\r\nconst { Title } = Typography;\r\n\r\nconst PrivateOptions = [\r\n    { value: 0, label: \"Private\"},\r\n    { value: 1, label: \"Public\"},\r\n]\r\nconst CategoryOptions = [\r\n    { value: 0, label: \"Film & Animation\"},\r\n    { value: 1, label: \"Auto & Vehicles\"},\r\n    { value: 2, label: \"Music\"},\r\n    { value: 3, label: \"Pets & Animals\"},\r\n]\r\n\r\nconst VideoUploadComponent = (props) => {\r\n\r\n    const user = useSelector(state => state.user);\r\n    const [videoTitle, setVideoTitle] = useState('');\r\n    const [videoDescription, setVideoDescription] = useState('');\r\n    const [videoPrivate, setVideoPrivate] = useState(0);\r\n    const [videoCategory, setVideoCategory] = useState(\"Film & Animation\");\r\n\r\n    const [filePath, setFilePath] = useState('');\r\n    const [fileDuration, setFileDuration] = useState('');\r\n    const [fileThumbnail, setFileThumbnail] = useState('');\r\n\r\n    //input에 입력하기 위해 change 함수를 꼭 만들어줘야됨\r\n    const onTitleChange = e => {\r\n        setVideoTitle(e.currentTarget.value);\r\n    }\r\n    const onDescriptionChange = e => {\r\n        setVideoDescription(e.currentTarget.value);\r\n    }\r\n    const onPrivateChange = e => {\r\n        setVideoPrivate(e.currentTarget.value);\r\n    }\r\n    const onCategoryChange = e => {\r\n        setVideoCategory(e.currentTarget.value);\r\n    }\r\n\r\n    //DropZone\r\n    const onDrop = (files) => {\r\n        const formData = new FormData;\r\n        const config = {\r\n            header: {'content-type': 'multipart/form-data'}\r\n        }\r\n        formData.append('file', files[0]);\r\n        console.log(files);\r\n\r\n        //여기서 formData, config 즉 file을 서버의 request로 보냄\r\n        axios.post('/api/video/uploadfiles', formData, config) \r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    console.log(response.data);\r\n                    \r\n                    let variable = {\r\n                        url: response.data.url,\r\n                        fileName: response.data.fileName,\r\n                    }\r\n                    setFilePath(response.data.url);\r\n                    \r\n                    //variable을 보내줌\r\n                    axios.post('/api/video/thumbnail', variable)\r\n                        .then(response => {\r\n                            if(response.data.success) {\r\n                                console.log(response.data);\r\n\r\n                                setFileDuration(response.data.fileDuration);\r\n                                setFileThumbnail(response.data.url);\r\n                            } else {\r\n                                alert('썸네일 생성에 실패하였습니다.');\r\n                            }\r\n                        })\r\n                } else {\r\n                    alert('비디오 업로드를 실패했습니다.');\r\n                }\r\n            })\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const variable = {\r\n            writer: user.userData._id,\r\n            title: videoTitle,\r\n            description: videoDescription,\r\n            privacy: videoPrivate,\r\n            filePath: filePath,\r\n            category: videoCategory,\r\n            duration: fileDuration,\r\n            thumbnail: fileThumbnail,\r\n        }\r\n\r\n        axios.post('/api/video/uploadVideo', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    message.success('성공적으로 업로드를 하였습니다.');\r\n                    setTimeout(() => {\r\n                        props.history.push('/');\r\n                    }, 3000)\r\n                } else {\r\n                    alert(\"비디오 업로드에 실패 했습니다.\");\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto'}}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <Title level={2}>Upload Video</Title>\r\n            </div>\r\n\r\n            <Form onSubmit>\r\n                <div style={{display: 'flex', justifyContent: 'flex-start'}}>\r\n                    {/* Drop Zone */}\r\n                    <Dropzone\r\n                    onDrop={onDrop}\r\n                    multiple={false}\r\n                    maxSize={10000000}>\r\n                        {({getRootProps, getInputProps}) => (\r\n                            <div style ={{\r\n                                width: '300px', height: '240px',\r\n                                border: '1px solid lightgray',\r\n                                display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n                            }} {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                <PlusOutlined type='plus' style={{fontSize: '3rem'}}></PlusOutlined>\r\n                            </div>\r\n                        )}\r\n\r\n                    </Dropzone>\r\n\r\n                    {/* Thumbnail */}\r\n                        \r\n                    {fileThumbnail && \r\n                        <div style={{ marginLeft: '20px'}}>\r\n                            {/* 서버가 5000포트라 꼭 앞에다 넣어줘야함  */}\r\n                            <img src={`http://localhost:5000/${fileThumbnail}`} alt=\"thumbnail\"/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <br />\r\n                <br />\r\n                \r\n                <label>Title</label>\r\n                <Input\r\n                    onChange={onTitleChange}\r\n                    value={videoTitle}\r\n                />\r\n                <br />\r\n                <br />\r\n\r\n                <label>Description</label>\r\n                <TextArea\r\n                    onChange={onDescriptionChange}\r\n                    value={videoDescription}\r\n                />\r\n                <br />\r\n                <br />\r\n\r\n                <select onChange={onPrivateChange}>\r\n                    {PrivateOptions.map((PrivateOption, index) => (\r\n                        <option key={index} value={PrivateOption.value}>{PrivateOption.label}</option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n\r\n                <select onChange={onCategoryChange}>\r\n                    {CategoryOptions.map((CategoryOption, index) => (\r\n                        <option key={index} value={CategoryOption.value}>{CategoryOption.label}</option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(VideoUploadComponent);","C:\\Users\\JMJ\\youtube\\client\\src\\actions\\types.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\reducers\\rootReducer.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\LoginPage\\LoginComponent.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\pages\\RegisterPage.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\hoc\\auth.js",["173","174"],"import React, { useEffect } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { auth } from '../actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nexport default function(SpecificComponent, option, adminRoute = null) {\r\n    \r\n    //option\r\n    //null => 아무나 출입 가능한 페이지\r\n    //true => 로그인한 유저만 출입 가능한 페이지\r\n    //false => 로그인한 유저는 출입 불가능한 페이지\r\n    //adminRoute 파라미터는 admin만 출입가능하게하려면 true를 넣으면됨\r\n\r\n    function AuthenticationCheck(props) {\r\n        const dispatch = useDispatch();\r\n\r\n         useEffect(() => {\r\n            dispatch(auth())\r\n            .then(response => {\r\n                console.log(response);\r\n\r\n                //로그인 하지 않은 상태\r\n                if (!response.payload.isAuth) {\r\n                    if(option) {\r\n                        props.history.push('/login');\r\n                    }\r\n                } else {\r\n                    //로그인한 상태\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/');\r\n                    } else {\r\n                        if(option === false) {\r\n                            props.history.push('/');\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n         }, []);\r\n\r\n         return (\r\n             <SpecificComponent></SpecificComponent>\r\n         )\r\n    }\r\n\r\n    return withRouter(AuthenticationCheck);\r\n}",["175","176"],"C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoDetail\\VideoDetailComponent.js",["177"],"import React, { useEffect, useState } from 'react';\r\nimport {Row, Col, List, Avatar} from 'antd';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SideVideo from './Section/SideVideo';\r\nimport Subscribe from './Section/Subscribe';\r\nimport Comment from './Section/Comment';\r\nimport LikeDislikes from './Section/LikeDislikes';\r\n\r\nconst VideoDetailComponent = (props) => {\r\n    const videoId = props.match.params.videoId;\r\n    const variable = {\r\n        videoId : videoId,\r\n    };\r\n    const [videoDetail, setVideoDetail] = useState([]);\r\n    const [comments, setComments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/video/getVideoDetail', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setVideoDetail(response.data.videoDetail);\r\n                } else {\r\n                    alert('비디오 정보를 가져오는데 실패하였습니다.');\r\n                }\r\n            });\r\n\r\n        axios.post('/api/comment/getComments', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setComments(response.data.comments);\r\n                } else {\r\n                    alert('코멘트 정보를 가져오는데 실패하였습니다.');\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    const refreshFunction = (newComment) => {\r\n        setComments(comments.concat(newComment));\r\n    }\r\n    \r\n    if(videoDetail.writer) {\r\n        const subscribedButton = videoDetail.writer._id !== localStorage.getItem('userID') \r\n            && <Subscribe \r\n                    userTo= {videoDetail.writer._id} \r\n                    userFrom={localStorage.getItem('userID')}\r\n                />\r\n        return (\r\n            <>\r\n                <Row gutter={[16, 16]}>\r\n                    <Col lg={18} xs={24}>\r\n                        <div style={{\r\n                            width: '100%',\r\n                            padding: '3rem 4rem'\r\n                        }}>\r\n                            <video \r\n                                style={{ width: '100%' }} \r\n                                src={`http://localhost:5000/${videoDetail.filePath}`}\r\n                                controls \r\n                            />\r\n                            <List.Item actions={[ \r\n                                <LikeDislikes video userId={localStorage.getItem('userID')} videoId={videoId} />\r\n                                , subscribedButton \r\n                            ]}>\r\n                                <List.Item.Meta\r\n                                    avatar={<Avatar src={videoDetail.writer.image}/>}\r\n                                    title={videoDetail.writer.name}\r\n                                    description={videoDetail.description}\r\n                                />\r\n                            </List.Item>\r\n\r\n                            {/* Comment */}\r\n\r\n                            <Comment \r\n                                refreshFunction={refreshFunction}\r\n                                commentList={comments}\r\n                                postId={videoDetail._id} \r\n                            />\r\n                        </div>\r\n                    </Col>\r\n\r\n                    {/* SideVideo */}\r\n                    <Col lg={6} xs={24}>\r\n                        <SideVideo></SideVideo>\r\n                    </Col>\r\n                </Row>  \r\n            </>\r\n        );\r\n    } else {\r\n        return <div>...loading</div>;\r\n    }\r\n};\r\n\r\nexport default withRouter(VideoDetailComponent);","C:\\Users\\JMJ\\youtube\\client\\src\\pages\\VideoDetailPage.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoDetail\\Section\\SideVideo.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoDetail\\Section\\Subscribe.js",["178"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Subscribe = (props) => {\r\n\r\n    const [subscribeNumber, setSubscribeNumber] = useState(0);\r\n    const [subscribed, setSubscribed] = useState(false);\r\n\r\n    const variable = {\r\n        userTo: props.userTo\r\n    }\r\n    const subscribedVariable = {\r\n        userTo: props.userTo,\r\n        userFrom: localStorage.getItem('userID'),\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/subscribe/subscribeNumber', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribeNumber(response.data.subscribeNumber)\r\n                } else {\r\n                    alert('구독자 수 정보를 가져오지 못했습니다.');\r\n                }\r\n            })\r\n\r\n        axios.post('/api/subscribe/subscribed', subscribedVariable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribed(response.data.subscribed);\r\n                } else {\r\n                    alert('정보를 가져오지 못했습니다.');\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    const onSubscribe = () => {\r\n\r\n        let subscribedVariable = {\r\n            userTo: props.userTo,\r\n            userFrom: props.userFrom,\r\n        }\r\n\r\n        if (subscribed) {\r\n            axios.post('/api/subscribe/unSubscribe', subscribedVariable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setSubscribeNumber(subscribeNumber - 1);\r\n                        setSubscribed(!subscribed);\r\n                    } else {\r\n                        alert('구독 취소 하는데 실패하였습니다.')\r\n                    }\r\n                })\r\n        } else {\r\n            axios.post('/api/subscribe/subscribe', subscribedVariable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setSubscribeNumber(subscribeNumber + 1);\r\n                        setSubscribed(!subscribed);\r\n                    } else {\r\n                        alert('구독 하는데 실패하였습니다.')\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                style={{\r\n                    backgroundColor: `${subscribed ? '#999' : '#E03030'}`,\r\n                    borderRadius: '4px',\r\n                    color: '#fff',\r\n                    padding: '10px 16px',\r\n                    fontWeight: '500',\r\n                    fontSize: '1rem',\r\n                    textTransform: 'uppercase',\r\n                    border: 'none',\r\n                    outline: 'none',\r\n                    cursor: 'pointer',\r\n                }}\r\n                onClick={onSubscribe}\r\n            >\r\n                {subscribeNumber} {subscribed ? 'Subscribed' : 'Subscribe'}\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Subscribe;","C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\Subscription\\SubscriptionComponent.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\pages\\SubscriptionPage.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoDetail\\Section\\Comment.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoDetail\\Section\\SingleComment.js",[],"C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoDetail\\Section\\ReplyComment.js",["179"],"import React, { useEffect, useState } from 'react';\r\nimport SingleComment from './SingleComment';\r\n\r\nconst ReplyComment = ({ commentList, parentCommentId, postId, refreshFunction }) => {\r\n    const [childCommentNumber, setChildCommentNumber] = useState(0);\r\n    const [openReplyComment, setOpenReplyComment] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let commentNumber = 0;\r\n\r\n        commentList.map(comment => {\r\n            if (comment.responseTo === parentCommentId) {\r\n                commentNumber++;\r\n            }\r\n        })\r\n        setChildCommentNumber(commentNumber);\r\n    }, [commentList, parentCommentId])\r\n    \r\n    const renderReplyComment = parentCommentId => {\r\n        return commentList.map((comment, index) => (\r\n            <React.Fragment>\r\n                {comment.responseTo === parentCommentId &&\r\n                    <div style={{ width: '80%', marginLeft: '40px'}}>\r\n                        <SingleComment\r\n                            comment={comment} \r\n                            refreshFunction={refreshFunction} \r\n                            postId={postId}\r\n                        />\r\n                        <ReplyComment\r\n                            refreshFunction={refreshFunction} \r\n                            parentCommentId={comment._id} \r\n                            commentList={commentList} \r\n                            postId={postId} \r\n                        />\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        ));\r\n    }\r\n\r\n    const onHandleChange = () => {\r\n        setOpenReplyComment(!openReplyComment);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {childCommentNumber > 0 &&\r\n                <p style={{ fontSize: '14px', margin: 0, color: 'gray'}} onClick={onHandleChange}>\r\n                    View {childCommentNumber} more Comment(s);\r\n                </p>\r\n            }\r\n\r\n            {openReplyComment &&\r\n               renderReplyComment(parentCommentId)\r\n            }\r\n            \r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReplyComment;","C:\\Users\\JMJ\\youtube\\client\\src\\components\\views\\VideoDetail\\Section\\LikeDislikes.js",["180","181"],"import React, { useEffect, useState } from 'react';\r\nimport { Tooltip } from 'antd';\r\nimport { LikeOutlined, DislikeOutlined, DislikeFilled, LikeFilled } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nconst LikeDislikes = ({ video, videoId, userId, commentId }) => {\r\n    \r\n    const [likes, setLikes] = useState(0);\r\n    const [dislikes, setDislikes] = useState(0);\r\n    const [likeAction, setLikeAction] = useState(null);\r\n    const [disLikeAction, setDislikeAction] = useState(null);\r\n\r\n    let variables = {}\r\n    if (video) {\r\n        variables = { \r\n            videoId: videoId,\r\n            userId: userId\r\n        }\r\n    } else {\r\n        variables = {\r\n            commentId: commentId,\r\n            userId: userId\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/like/getLikes', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n\r\n                    //얼마나 많은 좋아요를 받았는지\r\n                    setLikes(response.data.likes.length);\r\n\r\n\r\n                    // 내가 이미 그 좋아요를 눌렀는지\r\n                    response.data.likes.map(like => {\r\n                        if (like.userId === userId) {\r\n                            setLikeAction('liked');\r\n                        }\r\n                    }) \r\n                } else {\r\n                    alert('Like 정보를 가져오는데 실패하였습니다.');\r\n                }\r\n            })\r\n\r\n        axios.post('/api/like/getDisLikes', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n\r\n                    //얼마나 많은 싫어요를 받았는지\r\n                    setDislikes(response.data.dislikes.length);\r\n\r\n\r\n                    // 내가 이미 그 좋아요를 눌렀는지\r\n                    response.data.dislikes.map(dislike => {\r\n                        if (dislike.userId === userId) {\r\n                            setDislikeAction('disliked');\r\n                        }\r\n                    }) \r\n                } else {\r\n                    alert('DisLike 정보를 가져오는데 실패하였습니다.');\r\n                }\r\n            })\r\n    })\r\n    \r\n    const onLike = () => {\r\n        if(likeAction === null) {\r\n            axios.post('/api/like/upLike', variables)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setLikes(likes + 1);\r\n                        setLikeAction('liked');\r\n\r\n                        if(disLikeAction !== null) {\r\n                            setDislikeAction(null);\r\n                            setDislikes(dislikes - 1);\r\n                        }\r\n\r\n                    } else {\r\n                        alert('Like를 올리지 못했습니다.');\r\n                    }\r\n                })\r\n        } else {\r\n            axios.post('/api/like/downLike', variables)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setLikes(likes - 1);\r\n                        setLikeAction(null);\r\n                    } else {\r\n                        alert('Like를 내리지 못했습니다.');\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const onDisLike = () => {\r\n        if(disLikeAction !== null) {\r\n            axios.post('/api/like/unDislike', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setDislikes(dislikes - 1)\r\n                    setDislikeAction(null);\r\n                } else {\r\n                    alert('disLike를 올리지 못했습니다.');\r\n                }\r\n            })\r\n        } else {\r\n            axios.post('/api/like/upDislike', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setDislikes(dislikes + 1)\r\n                    setDislikeAction('disliked');\r\n\r\n                    if(likeAction !== null) {\r\n                        setLikeAction(null);\r\n                        setLikes(likes - 1);\r\n                    }\r\n\r\n                } else {\r\n                    alert('disLike를 지우지 못했습니다.');\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <span key=\"comment-basic-like\">\r\n                {video ? \r\n                <>\r\n                    <Tooltip title=\"Like\">\r\n                        {likeAction === \"liked\" ? \r\n                            <LikeFilled onClick={onLike} style={{fontSize: '20px'}}/> : \r\n                            <LikeOutlined onClick={onLike} style={{fontSize: '20px'}}/>\r\n                        } \r\n                    </Tooltip>\r\n                    <span style={{ paddingLeft: '4px', cursor: 'auto', fontSize: '20px'}}> {likes} </span>\r\n                </>\r\n                : \r\n                <>\r\n                    <Tooltip title=\"Like\">\r\n                        {likeAction === \"liked\" ? \r\n                            <LikeFilled onClick={onLike} /> : \r\n                            <LikeOutlined onClick={onLike}/>\r\n                        } \r\n                    </Tooltip>\r\n                    <span style={{ paddingLeft: '4px', cursor: 'auto'}}> {likes} </span>\r\n                </>\r\n                }\r\n                \r\n                \r\n            </span>\r\n\r\n            <span key=\"comment-basic-dislike\" style={{marginLeft: '5px'}}>\r\n                {video ? \r\n                    <>\r\n                        <Tooltip title=\"Dislike\">\r\n                            {disLikeAction === \"disliked\" ? \r\n                                <DislikeFilled onClick={onDisLike} style={{fontSize: '20px'}}/> : \r\n                                <DislikeOutlined onClick={onDisLike} style={{fontSize: '20px'}}/>\r\n                            }\r\n                        </Tooltip>\r\n                        <span style={{ paddingLeft: '4px', cursor: 'auto', fontSize: '20px'}}> {dislikes} </span>\r\n                    </>\r\n                :\r\n                    <>\r\n                        <Tooltip title=\"Dislike\">\r\n                            {disLikeAction === \"disliked\" ? \r\n                                <DislikeFilled onClick={onDisLike}/> : \r\n                                <DislikeOutlined onClick={onDisLike}/>\r\n                            }\r\n                        </Tooltip>\r\n                        <span style={{ paddingLeft: '4px', cursor: 'auto'}}> {dislikes} </span>\r\n                    </>\r\n                }\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LikeDislikes;",{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"182","replacedBy":"186"},{"ruleId":"184","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":41,"column":8,"nodeType":"190","endLine":41,"endColumn":10,"suggestions":"191"},{"ruleId":"182","replacedBy":"192"},{"ruleId":"184","replacedBy":"193"},{"ruleId":"182","replacedBy":"194"},{"ruleId":"184","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":8,"column":1,"nodeType":"198","endLine":22,"endColumn":2},{"ruleId":"182","replacedBy":"199"},{"ruleId":"184","replacedBy":"200"},{"ruleId":"182","replacedBy":"201"},{"ruleId":"184","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":51,"column":26,"nodeType":"205","messageId":"206","endLine":51,"endColumn":38,"fix":"207"},{"ruleId":"196","severity":1,"message":"197","line":6,"column":1,"nodeType":"198","endLine":46,"endColumn":2},{"ruleId":"188","severity":1,"message":"208","line":38,"column":13,"nodeType":"190","endLine":38,"endColumn":15,"suggestions":"209"},{"ruleId":"182","replacedBy":"210"},{"ruleId":"184","replacedBy":"211"},{"ruleId":"188","severity":1,"message":"212","line":36,"column":8,"nodeType":"190","endLine":36,"endColumn":10,"suggestions":"213"},{"ruleId":"188","severity":1,"message":"214","line":35,"column":8,"nodeType":"190","endLine":35,"endColumn":10,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":11,"column":33,"nodeType":"218","messageId":"219","endLine":11,"endColumn":35},{"ruleId":"216","severity":1,"message":"217","line":36,"column":50,"nodeType":"218","messageId":"219","endLine":36,"endColumn":52},{"ruleId":"216","severity":1,"message":"217","line":55,"column":56,"nodeType":"218","messageId":"219","endLine":55,"endColumn":58},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],["220"],["221"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'login'. Either include them or remove the dependency array. You can also do a functional update 'setLogin(l => ...)' if you only need 'login' in the 'setLogin' call.","ArrayExpression",["222"],["220"],["221"],["220"],["221"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["220"],["221"],["220"],["221"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"223","text":"224"},"React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["225"],["220"],["221"],"React Hook useEffect has a missing dependency: 'variable'. Either include it or remove the dependency array.",["226"],"React Hook useEffect has missing dependencies: 'subscribedVariable' and 'variable'. Either include them or remove the dependency array.",["227"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},[1711,1711],"()",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [dispatch, login]",{"range":"236","text":"237"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"238","text":"239"},"Update the dependencies array to be: [variable]",{"range":"240","text":"241"},"Update the dependencies array to be: [subscribedVariable, variable]",{"range":"242","text":"243"},[1292,1294],"[dispatch, login]",[1248,1250],"[dispatch, props.history]",[1286,1288],"[variable]",[1105,1107],"[subscribedVariable, variable]"]